---
description: 
globs: 
alwaysApply: true
---
# Development Workflow

This document outlines the development workflow for the GenAI Tool project.

## Project Setup
1. Clone the repository
2. Copy [.env.example](mdc:.env.example) to `.env` and fill in required values
3. Run `npm install` to install dependencies
4. Run `npm run dev` to start development server on `http://localhost:8080`

## Available Scripts
- `npm run dev` - Start development server (Vite)
- `npm run build` - Build for production
- `npm run preview` - Preview production build
- `npm run lint` - Run ESLint

## Technology Stack
- **Framework**: React 18 with TypeScript
- **Build Tool**: Vite
- **Styling**: Tailwind CSS + shadcn/ui components
- **Backend**: Supabase (authentication, database)
- **State Management**: React Context (AuthContext)
- **Routing**: React Router
- **UI Components**: shadcn/ui in [components/ui/](mdc:src/components/ui)

## File Organization Principles
- Components are organized by feature (auth, marketplace, ui)
- Shared data and utilities in `constants/` and `utils/`
- Type definitions in `types/`
- Service integrations in `services/` and `integrations/`

## Git Workflow
- Main branch: `main`
- Repository: https://github.com/donghaozhang/GenAI-tool
- Commit messages should be descriptive and include context
- Push changes regularly to maintain backup

## Key Configuration Files
- [package.json](mdc:package.json) - Dependencies and scripts
- [vite.config.ts](mdc:vite.config.ts) - Vite configuration
- [tailwind.config.ts](mdc:tailwind.config.ts) - Tailwind CSS configuration
- [tsconfig.json](mdc:tsconfig.json) - TypeScript configuration

## User Flow
1. Landing page ([Index.tsx](mdc:src/pages/Index.tsx))
2. Authentication (if not logged in)
3. AI Marketplace ([AIModelMarketplace.tsx](mdc:src/pages/AIModelMarketplace.tsx))
4. Model interaction and image generation

## Development Notes
- The application focuses on AI marketplace functionality
- Space Invaders game component exists but is not part of main user flow
- Authentication is handled through Supabase
- Environment variables are required for full functionality

